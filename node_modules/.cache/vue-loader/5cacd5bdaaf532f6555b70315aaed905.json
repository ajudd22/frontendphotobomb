{"remainingRequest":"/Users/student/Desktop/Lab5 copy/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/student/Desktop/Lab5 copy/front-end/src/components/Comments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/student/Desktop/Lab5 copy/front-end/src/components/Comments.vue","mtime":1592861097241},{"path":"/Users/student/Desktop/Lab5 copy/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/student/Desktop/Lab5 copy/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JzsKICBleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnQ29tbWVudHMnLAogICAgZGF0YSgpIHsKICAgICAgcmV0dXJuewogICAgICAgIGNvbW1lbnRzOiBudWxsLAogICAgICAgIG5ld0NvbW1lbnQ6ICcnLAogICAgICAgIGVycm9yOiAnJywKICAgICAgICBpbWdJRDogdGhpcy4kcm91dGUucGFyYW1zLmlkLAogICAgICB9CiAgICB9LAogICAgcHJvcHM6IFsncGhvdG9JRCddLAogICAgY3JlYXRlZCAoKSB7CiAgICAgIHRoaXMuZ2V0Q29tbWVudHMoKTsKICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICB1c2VyKCkgewogICAgICAgIHJldHVybiB0aGlzLiRyb290LiRkYXRhLnVzZXI7CiAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgIGZvcm1hdERhdGUoZGF0ZSkgewogICAgICAgIGlmIChtb21lbnQoZGF0ZSkuZGlmZihEYXRlLm5vdygpLCAnZGF5cycpIDwgMTUpCiAgICAgICAgICByZXR1cm4gbW9tZW50KGRhdGUpLmZyb21Ob3coKTsKICAgICAgICBlbHNlCiAgICAgICAgICByZXR1cm4gbW9tZW50KGRhdGUpLmZvcm1hdCgnZCBNTU1NIFlZWVknKTsKICAgICAgfSwKICAgICAgYXN5bmMgY3JlYXRlQ29tbWVudCgpIHsKICAgICAgICB0cnl7CiAgICAgICAgICBsZXQgcmVzcG9uc2UgPSAgYXdhaXQgYXhpb3MucG9zdCgiL2FwaS9jb21tZW50cy8iICsgdGhpcy4kcm91dGUucGFyYW1zLmlkLCB7Y29tbWVudDogdGhpcy5uZXdDb21tZW50fSk7CiAgICAgICAgICB0aGlzLmdldENvbW1lbnRzKCk7CiAgICAgICAgICB0aGlzLm5ld0NvbW1lbnQgPSIiOwogICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICB0aGlzLmVycm9yID0gIkVycm9yOiAiICsgZXJyb3IucmVzcG9uc2UuZGF0YS5tZXNzYWdlOwogICAgICAgICAgY29uc29sZS5sb2codGhpcy5lcnJvcik7CiAgICAgICAgfQogICAgICB9LAogICAgICBhc3luYyBnZXRDb21tZW50cygpIHsKICAgICAgICB0cnl7CiAgICAgICAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoIi9hcGkvY29tbWVudHMvIiArIHRoaXMuJHJvdXRlLnBhcmFtcy5pZCk7CiAgICAgICAgICB0aGlzLmNvbW1lbnRzID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOwogICAgICAgIH0gY2F0Y2goZXJyb3IpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgICB9CiAgICAgIH0sCiAgICB9LAp9Owo="},{"version":3,"sources":["Comments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Comments.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id = \"comments\">\n  <form class=\"pure-form\" @submit.prevent=\"createComment\" v-if=\"user\">\n    <legend>Leave a comment:</legend>\n      <fieldset>\n        <textarea v-model=\"newComment\"></textarea>\n          <br />\n          <button class=\"pure-button space-right\">Cancel</button>\n          <button class=\"pure-button pure-button-primary\" type=\"submit\">Submit</button>\n      </fieldset>\n    </form>\n    <div class = \"comment\" v-for= \"comment in comments\" v-bind:key=\"comment._id\">\n      <h3 class = \"comment-text\">{{comment.comment}}</h3><h5 class = \"user-name\"> - {{comment.user.firstName}}  {{comment.user.lastName}}</h5>\n      <h6 class = \"comment-date\">{{formatDate(comment.created)}}</h6>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport moment from 'moment';\n  export default {\n    name: 'Comments',\n    data() {\n      return{\n        comments: null,\n        newComment: '',\n        error: '',\n        imgID: this.$route.params.id,\n      }\n    },\n    props: ['photoID'],\n    created () {\n      this.getComments();\n    },\n    computed: {\n      user() {\n        return this.$root.$data.user;\n      }\n    },\n    methods: {\n      formatDate(date) {\n        if (moment(date).diff(Date.now(), 'days') < 15)\n          return moment(date).fromNow();\n        else\n          return moment(date).format('d MMMM YYYY');\n      },\n      async createComment() {\n        try{\n          let response =  await axios.post(\"/api/comments/\" + this.$route.params.id, {comment: this.newComment});\n          this.getComments();\n          this.newComment =\"\";\n        } catch (error) {\n          this.error = \"Error: \" + error.response.data.message;\n          console.log(this.error);\n        }\n      },\n      async getComments() {\n        try{\n          let response = await axios.get(\"/api/comments/\" + this.$route.params.id);\n          this.comments = response.data;\n          console.log(response.data);\n        } catch(error) {\n          console.log(error);\n        }\n      },\n    },\n};\n</script>\n<style>\n.user-name {\nmargin-left: 40px;\npadding:0px;\n}\ncomment-text{\nmargin:0px;\n}\n\n.comment{\nwidth: 100%;\nborder: .1px solid grey;\nmargin: 5px;\npadding:5px;\n}\n\n</style>\n"]}]}